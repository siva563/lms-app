# name: 🚀 Deploy LMS App to Hosting Raja

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     name: Deploy to Hosting Raja VPS
#     runs-on: ubuntu-latest

#     steps:
#       - name: ⏬ Checkout Code
#         uses: actions/checkout@v3

#       - name: 🔐 Setup SSH
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

#       - name: 🚀 Deploy Code via SSH
#         run: |
#           ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
#             cd ${{ secrets.VPS_PATH }}
#             git pull origin main
#             cd frontend && npm install && npm run build
#             cd ../backend && npm install
#             pm2 restart lms-backend
#           EOF

name: 🚀 Deploy LMS App to Hosting Raja

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Hosting Raja VPS
    runs-on: ubuntu-latest

    steps:
      - name: ⏬ Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to VPS with Backup
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            TIMESTAMP=$(date +%Y-%m-%d-%H-%M)
            cd /root

            # Step 1: Backup current folder
            if [ -d "lms-app" ]; then
              mkdir -p backups
              cp -r lms-app backups/lms-app-\$TIMESTAMP
              echo "✅ Backup created at backups/lms-app-\$TIMESTAMP"
            fi

            # Step 2: Clean up old backups (keep last 3)
            ls -dt backups/* | tail -n +4 | xargs rm -rf || true
            echo "♻️ Old backups cleaned"

            # Step 3: Pull latest code
            cd lms-app
            git fetch origin main
            git reset --hard origin/main

            # Step 4: Frontend build
            cd frontend
            npm install
            npm run build

            # Step 5: Backend setup
            cd ../backend
            npm install

            # Step 6: Restart backend
            pm2 restart lms-backend

            echo "✅ Deployment finished!"
          EOF

      - name: 📧 Notify on Success
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "✅ LMS Deployment Successful - ${{ github.repository }}"
          to: gsivaprasad2009@gmail.com
          from: ${{ secrets.EMAIL_USER }}
          body: |
            Hi Siva,

            ✅ LMS App has been successfully deployed to Hosting Raja.

            🔁 Repo: ${{ github.repository }}
            📦 Branch: ${{ github.ref_name }}
            🕒 Time: ${{ github.event.head_commit.timestamp }}
            🔗 Commit: ${{ github.event.head_commit.message }}

            Regards,
            GitHub Actions

      - name: ❌ Notify on Failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "❌ LMS Deployment Failed - ${{ github.repository }}"
          to: gsivaprasad2009@gmail.com
          from: ${{ secrets.EMAIL_USER }}
          body: |
            Hi Siva,

            ❌ Deployment failed for LMS App.

            🔁 Repo: ${{ github.repository }}
            📦 Branch: ${{ github.ref_name }}
            🕒 Time: ${{ github.event.head_commit.timestamp }}
            🔗 Commit: ${{ github.event.head_commit.message }}

            Please check the GitHub Actions log.

            Regards,
            GitHub Actions
